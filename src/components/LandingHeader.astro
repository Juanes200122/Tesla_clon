---
import Logo from "./Logo.astro";
---

<header id="landing-header" class="py-2 px-10 flex items-center fixed top-0 w-full justify-between z-40 text-current">
    <div class="flex flex-grow basis-0">
        <a href="#home"><Logo /></a>
    </div>

    <nav class="hidden xl:block sm:hidden">
        <ul class="flex text-sm [&>li>a]:transition-colors [&>li>a]:duration-500 [&>li>a]:text-current [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2">
            <li class="list_hover"><a href="#Cybertruck">Cybertruck</a></li>
            <li class="list_hover"><a href="#Model_S">Model S</a></li>
            <li class="list_hover"><a href="#Model_3">Model 3</a></li>
            <li class="list_hover"><a href="#Model_X">Model X</a></li>
            <li class="list_hover"><a href="#Model_Y">Model Y</a></li>
            <li class="list_hover"><a href="#Powerwall">Powerwall</a></li>
            <li class="list_hover"><a href="#Carga">Carga</a></li>
        </ul>
    </nav>

    <nav class="flex flex-grow justify-end basis-0">
        <ul
            class="flex text-sm [&>li>a]:transition-colors [&>li>a]:duration-500 [&>li>a]:text-current [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2"
        >
            <li class="list_hover hidden xl:block sm:hidden"><a href="#">Tienda</a></li>
            <li class="list_hover hidden xl:block sm:hidden"><a href="#">Cuenta</a></li>
            <li class="list_hover"><a id="menu-btn" href="#">Men√∫</a></li>
        </ul>
    </nav>

    <nav id="modal-menu" class="hidden xl:hidden flex flex-col bg-white fixed top-0 left-0 right-0 bottom-0">
        <button id="close-btn" class="w-screen flex justify-end p-5">
            <img
                class="text-black h-6"
                src="/close-icon.svg"
                alt="close image"
            />
        </button>
        <ul class="flex flex-col mt-4 [&>li>a]:transition-colors [&>li]:m-3 [&>li>a]:flex [&>li>a]:justify-between [&>li>a]:duration-200 [&>li>a]:text-black [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-6 [&>li>a]:py-3 [&>li>a]:rounded-md [&>li>a]:w-full">
            <li>
                <a class="hover:bg-slate-100" href="#home">Home
                    <img class="h-5" alt="arrow icon" src="/arrow-icon.svg" />
                </a>
            </li>
            <li>
                <a class="hover:bg-slate-100" href="#Cybertruck">Cybertruck
                    <img class="h-5" alt="arrow icon" src="/arrow-icon.svg" />
                </a>
            </li>
            <li>
                <a class="hover:bg-slate-100" href="#Model_S"
                    >Model S
                    <img class="h-5" alt="arrow icon" src="/arrow-icon.svg" />
                </a>
            </li>
            <li>
                <a class="hover:bg-slate-100" href="#Model_3"
                    >Model 3
                    <img class="h-5" alt="arrow icon" src="/arrow-icon.svg" />
                </a>
            </li>
            <li>
                <a class="hover:bg-slate-100" href="#Model_X"
                    >Model X
                    <img class="h-5" alt="arrow icon" src="/arrow-icon.svg" />
                </a>
            </li>
            <li>
                <a class="hover:bg-slate-100" href="#Model_Y"
                    >Model Y
                    <img class="h-5" alt="arrow icon" src="/arrow-icon.svg" />
                </a>
            </li>
            <li>
                <a class="hover:bg-slate-100" href="#Powerwall"
                    >Powerwall
                    <img class="h-5" alt="arrow icon" src="/arrow-icon.svg" />
                </a>
            </li>
            <li>
                <a class="hover:bg-slate-100" href="#Carga"
                    >Carga
                    <img class="h-5" alt="arrow icon" src="/arrow-icon.svg" />
                </a>
            </li>
        </ul>
    </nav>

    <div
        id="menu-backdrop"
        class={`
      absolute bg-black/5 backdrop-blur-lg rounded
      translate-x-[var(--left)] translate-y-[var(--top)]
      left-0 top-0
      w-[var(--width)] h-[var(--height)]
      transition-all duration-500
      ease-in-out opacity-0 -z-10
    `}
    >
    </div>
</header>

<script>
    const menuBtn = document.getElementById("menu-btn");
    const modalMenu = document.querySelector("#modal-menu");
    const closeBtn = document.querySelector("#close-btn");

    if (menuBtn && modalMenu && closeBtn) {
        const menuItems = modalMenu.querySelectorAll("li>a");

        function toggleDropdownMenu() {
            if (modalMenu) {
                modalMenu.classList.toggle("hidden");
            }
        }

        menuBtn.addEventListener("click", toggleDropdownMenu);
        closeBtn.addEventListener("click", toggleDropdownMenu);

        menuItems.forEach((Item) => {
            Item.addEventListener("click", toggleDropdownMenu);
        });
    } else {
        console.error(
            "No se encontraron algunos elementos necesarios en el DOM.",
        );
    }

    const listItem = document.querySelectorAll("#landing-header .list_hover");
    const menuBackDrop = document.querySelector("#menu-backdrop",) as HTMLElement;

    listItem.forEach((item) => {
        item.addEventListener("mouseenter", () => {
            const { left, top, width, height } = item.getBoundingClientRect();

            menuBackDrop.style.setProperty("--left", `${left}px`);
            menuBackDrop.style.setProperty("--top", `${top}px`);
            menuBackDrop.style.setProperty("--width", `${width}px`);
            menuBackDrop.style.setProperty("--height", `${height}px`);

            menuBackDrop.style.opacity = "1";
            menuBackDrop.style.visibility = "visible";
        });

        item.addEventListener("mouseleave", () => {
            menuBackDrop.style.opacity = "0";
            menuBackDrop.style.visibility = "hidden";
        });
    });

    const $header = document.querySelector("#landing-header") as HTMLElement;
    const observerOptions = {
        root: null,
        rootMargin: "0px", // en cuanto de vea del elemento
        threshold: 0.9, //porcentaje de visibilidad
    };

    const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
            const { isIntersecting } = entry;
            if (isIntersecting) {
                const color = entry.target.getAttribute("data-header-color");
                if (color) {
                    $header.style.color = color;
                }
            }
        });
    }, observerOptions);

    const $sections = document.querySelectorAll(".landing-section");
    $sections.forEach((section) => observer.observe(section));
</script>
